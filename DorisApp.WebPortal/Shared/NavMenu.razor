@inject IJSRuntime JSRuntime

<div class="sidebar-backdrop"></div>
<div class="sidebar-top">
    <div class="logo">
        <img src="/img/logo.png" alt="Company Logo">
    </div>
    <div class="info">
        <h1 class="company-name">Doris</h1>
        <p class="tagline">Consumer Good Trading</p>
    </div>

    <i class="fa-solid fa-x" id="sidebar-toggle-x-btn"></i>
</div>


<ul class="nav">

    <li class="nav-item">
        <NavLink class="nav-link" href="product" Match=@NavLinkMatch.All>
            <i class="menu-icon fa-light fa-wheat"></i>
            <span class="menu-title">Products</span>
        </NavLink>
    </li>


    <li class="nav-item">
        <a class="nav-link" href="#category" Match=@NavLinkMatch.Prefix 
        data-bs-toggle="collapse" aria-expanded="false" aria-controls="category">
            <i class="menu-icon fa-light fa-chart-simple-horizontal"></i>
            <span class="menu-title">Categories</span>
            <i class="menu-arrow fa-solid fa-chevron-down"></i>

            <ul class="sub-menu collapse" id="category">
                <li class="nav-sub-item">
                    <NavLink class="sub-nav-link" href="categories" Match=@NavLinkMatch.All>
                        <i class="fa-regular fa-arrow-right"></i>
                        Category
                    </NavLink>
                </li>
                <li class="nav-sub-item">
                    <NavLink class="sub-nav-link" href="subcategories" Match=@NavLinkMatch.All>
                        <i class="fa-regular fa-arrow-right"></i>
                        SubCategory
                    </NavLink>
                </li>
            </ul>
        </a>
    </li>



    <li class="nav-item" Match=@NavLinkMatch.All>
        <NavLink class="nav-link" href="login">
            <i class="menu-icon fa-light fa-right-to-bracket"></i>
            <span class="menu-title">Login</span>
        </NavLink>
    </li>

</ul>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("registerSidebarToggleHandler");
        }
    }
}
