@inherits LayoutComponentBase
@inject NavigationManager NavManager

<AuthorizeView>
    <Authorized>
        <div class="app-container">

            <div class="sidebar" id="sidebar">
                <NavMenu />
            </div>

            <main class="main-content">
                <header class="row header">

                    <div class="col header-left">
                        <i class="menu-bar fa-regular fa-bars" id="sidebar-toggle-btn"></i>
                        <h1 class="page-title">@PageName</h1>
                    </div>

                    <div class="col">
                        <div class="header-account">

                            <div class="accout-info">
                                <p>
                                    Hi,
                                    <b>@context.User.FindFirst(ClaimTypes.Name)?.Value</b>
                                </p>
                                <p class="account-role">
                                    @context.User.FindFirst(ClaimTypes.Role)?.Value
                                </p>
                            </div>

                            <div class="account-profile" data-bs-toggle="collapse" data-bs-target="#accountMenu">
                                <img src="/img/am1.jpg" alt="profile">
                                <div class="account-menu collapse" id="accountMenu">
                                    <NavLink class="nav-link" href="logout">
                                        <p>
                                            Logout <i class="fa-light fa-arrow-right-from-bracket"></i>
                                        </p>
                                    </NavLink>
                                </div>
                            </div>


                        </div>
                    </div>

                </header>

                @Body
            </main>

        </div>

    </Authorized>
    <NotAuthorized>
        @{
            NavManager.NavigateTo("/login");
        }
    </NotAuthorized>
</AuthorizeView>


@code {
    private string? PageName { get; set; }

    protected override void OnInitialized()
    {
        NavManager.LocationChanged += OnLocationChanged;
        OnLocationChanged(this, new LocationChangedEventArgs(NavManager.Uri, true));
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        var segments = NavManager.Uri.Split('/');
        PageName = segments[segments.Length - 1];

        if (string.IsNullOrEmpty(PageName)) PageName = "Dashboard";
        if (PageName == "products") PageName = "Product";
        if (PageName == "brands") PageName = "Brand";
        if (PageName == "categories") PageName = "Category";
        if (PageName == "subcategories") PageName = "Sub Category";
        if (PageName == "inventory") PageName = "Inventory";

        StateHasChanged();
    }

    public void Dispose() => NavManager.LocationChanged -= OnLocationChanged;


}

