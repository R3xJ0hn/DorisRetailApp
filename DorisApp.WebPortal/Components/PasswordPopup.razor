@inject IAPIHelper Api
@inject IJSRuntime JSRuntime

<div class="password-popup-backdrop"></div>
<div class=" password-popup">
    <button type="button" class="btn-close" onclick="ClosePasswordPopup()"></button>

    <h4>Enter Your Password</h4>

    <label for="inputPassword" class="col-sm-2 col-form-label">@Email</label>
    <input type="password" class="form-control" @bind="password" autofocus="true">
    <input type="hidden" @bind="stamp" id="securityStamp" />

    <div class="form-validation @(passwordValidated? "d-none" : "")">
        Incorrect Password.
    </div>

    <button id="securityStampConfirmBtn" type="submit" class="btn btn-primary mt-2" @onclick="OnConfirmClicked">
        <span class="spinner-border spinner-border-sm @(!isLoading? "d-none" : "")" role="status"
            aria-hidden="true"></span>
        Confirm identity
    </button>

</div>

@code {
    private string? stamp;
    private string? password;
    private bool isLoading;
    private bool passwordValidated = true;

    [Parameter]
    public string Email { get; set; } = string.Empty;

    private async Task OnConfirmClicked()
    {
        isLoading = true;
        stamp = await Api.RequestSecurityStamp(password);
        StateHasChanged();

        if (!string.IsNullOrEmpty(stamp))
        {
            passwordValidated = true;
            await JSRuntime.InvokeVoidAsync("StampChange", stamp);
            await JSRuntime.InvokeVoidAsync("ClosePasswordPopup");
        }
        else
        {
            passwordValidated = false;
        }

        isLoading = false;
        password = "";
    }

}
